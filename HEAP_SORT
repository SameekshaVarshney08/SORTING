#include <stdio.h>
int size = 10;
void build_maxheap(int[]);
void max_heapify(int[], int);
void heapsort(int[]);
void main()
{
    int a[] = {0, 9, 8, 7, 5, 7, 2, 3, 1, 4, 8};
    // original
    printf("before sorting: ");
    for (int i = 1; i <= 10; i++)
    {
        printf("%d \t", a[i]);
    }
    printf("\n");
    heapsort(a);
    // sorted array
    printf("after sorting:  ");
    for (int i = 1; i <= 10; i++)
    {
        printf("%d \t", a[i]);
    }
}
void heapsort(int a[])
{
    build_maxheap(a);
    int temp;
    for (int i = size; i > 1; i--)
    {
        temp = a[1];
        a[1] = a[i];
        a[i] = temp;
        size--;
        max_heapify(a, 1);
    }
}
void max_heapify(int a[], int i)
{
    int temp;
    int left;
    int right;
    int largest = i;
    left = 2 * i;
    right = left + 1;
    if (left < size && a[left] > a[largest])
    {
        largest = left;
    }
    else
        largest = i;
    if (right < size && a[right] > a[largest])
    {
        largest = right;
    }
    if (largest != i)
    {
        temp = a[i];
        a[i] = a[largest];
        a[largest] = temp;
        max_heapify(a, largest);
    }
}

void build_maxheap(int a[])
{
    for (int i = size / 2; i >= 1; i--)
    {
        max_heapify(a, i);
    }
}
